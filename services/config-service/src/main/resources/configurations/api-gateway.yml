
app:
  apiPrefix: /api/v1

spring:
  cloud:
    gateway:
      routes:
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=${app.apiPrefix}/auth/**
          filters:
            - StripPrefix=2
            - name: RequestRateLimiter
              args:
                # 5 requests per minute
                redis-rate-limiter.replenish-rate: 1
                redis-rate-limiter.burst-capacity: 2
                redis-rate-limiter.requestedTokens: 1
                key-resolver: "#{@userKeyResolver}"
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=${app.apiPrefix}/user-profile/**, ${app.apiPrefix}/user-address/**, ${app.apiPrefix}/registration/**,${app.apiPrefix}/otp/**
          filters:
            - StripPrefix=2
            - name: Retry
              args:
                retries: 3 # Retry tối đa 3 lần
                statuses: BAD_GATEWAY, GATEWAY_TIMEOUT, INTERNAL_SERVER_ERROR # Retry với các status code này
                methods: GET # Retry cho các phương thức GET
                backoff:
                  firstBackoff: 3s  # Thời gian retry đầu tiên
                  maxBackoff: 5s    # Thời gian tối đa giữa các lần retry
                  factor: 2       # Tăng thời gian retry theo factor
                  basedOnPreviousValue: true # Dựa trên thời gian của lần retry trước
        - id: notification-service
          uri: lb://notification-service
          predicates:
            - Path=${app.apiPrefix}/notification/**
          filters:
            - StripPrefix=2
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=${app.apiPrefix}/products/**, ${app.apiPrefix}/categories/**
          filters:
            - StripPrefix=2
            - name: Retry
              args:
                retries: 3 # Retry tối đa 3 lần
                statuses: BAD_GATEWAY, GATEWAY_TIMEOUT, INTERNAL_SERVER_ERROR,SERVICE_UNAVAILABLE # Retry với các status code này
                methods: GET # Retry cho các phương thức GET
                backoff:
                  firstBackoff: 3s  # Thời gian retry đầu tiên
                  maxBackoff: 5s    # Thời gian tối đa giữa các lần retry
                  factor: 2       # Tăng thời gian retry theo factor
                  basedOnPreviousValue: true # Dựa trên thời gian của lần retry trước
        - id: inventory-service
          uri: lb://inventory-service
          predicates:
            - Path=${app.apiPrefix}/inventory/**
          filters:
            - StripPrefix=2
        - id: cart-service
          uri: lb://cart-service
          predicates:
            - Path=${app.apiPrefix}/cart/**, ${app.apiPrefix}/cartItems/**
          filters:
            - StripPrefix=2
            - name: Retry
              args:
                retries: 3 # Retry tối đa 3 lần
                statuses: BAD_GATEWAY, GATEWAY_TIMEOUT, INTERNAL_SERVER_ERROR # Retry với các status code này
                methods: GET # Retry cho các phương thức GET
                backoff:
                  firstBackoff: 3s  # Thời gian retry đầu tiên
                  maxBackoff: 5s    # Thời gian tối đa giữa các lần retry
                  factor: 2       # Tăng thời gian retry theo factor
                  basedOnPreviousValue: true # Dựa trên thời gian của lần retry trước
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=${app.apiPrefix}/orders/**
          filters:
            - StripPrefix=2
            - name: Retry
              args:
                retries: 3 # Retry tối đa 3 lần
                statuses: BAD_GATEWAY, GATEWAY_TIMEOUT, INTERNAL_SERVER_ERROR # Retry với các status code này
                methods: GET # Retry cho các phương thức GET
                backoff:
                  firstBackoff: 3s  # Thời gian retry đầu tiên
                  maxBackoff: 5s    # Thời gian tối đa giữa các lần retry
                  factor: 2       # Tăng thời gian retry theo factor
                  basedOnPreviousValue: true # Dựa trên thời gian của lần retry trước
        - id: payment-service
          uri: lb://payment-service
          predicates:
              - Path=${app.apiPrefix}/payment/**
          filters:
              - StripPrefix=2
        - id: promotion-service
          uri: lb://promotion-service
          predicates:
            - Path=${app.apiPrefix}/promotions/**
          filters:
            - StripPrefix=2
            - name: Retry
              args:
                retries: 3 # Retry tối đa 3 lần
                statuses: BAD_GATEWAY, GATEWAY_TIMEOUT, INTERNAL_SERVER_ERROR # Retry với các status code này
                methods: GET # Retry cho các phương thức GET
                backoff:
                  firstBackoff: 3s  # Thời gian retry đầu tiên
                  maxBackoff: 5s    # Thời gian tối đa giữa các lần retry
                  factor: 2       # Tăng thời gian retry theo factor
                  basedOnPreviousValue: true # Dựa trên thời gian của lần retry trước
        - id: delivery-service
          uri: lb://delivery-service
          predicates:
            - Path=${app.apiPrefix}/delivery/**
          filters:
            - StripPrefix=2

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081/realms/springboot-ms-realm
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:8081/realms/springboot-ms-realm
        registration:
          keycloak-client:
            client-id: ecommerce_ms_app
            client-secret: B9HnviniWRfOQEKzEhLROtl3USI13Irl
            authorization-grant-type: client_credentials
            scope: openid
  redis:
    host: localhost
    port: 6379
  cache:
    type: redis


server:
  port: 8080

logging:
  level:
    org.springframework.cloud.gateway.filter.ratelimit: DEBUG
    org.springframework.data.redis: DEBUG